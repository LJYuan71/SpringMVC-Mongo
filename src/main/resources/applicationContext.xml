<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- 注解扫描：可以自动去扫描base-pack下面或者子包下面的Java文件，如果扫描到有
    @Component @Controller@Service等这些注解的类，则把这些类注册为bean -->
	<!-- <context:component-scan base-package="tk.ljyuan71" /> -->
    <!-- 在配置文件中配置了<context:component-scan />，就不用在配置<context:annotation-config/>,因为前者已经包含了后者 -->
    <!-- 此行语句使得resource autowired 等四个注解可以使用
	<context:annotation-config />  -->
    <!-- 引入 mongo-->
	<import resource="classpath:spring-mongo.xml"/>
	<!-- 配置读取外部配置文件 -->
    <!-- 
	<context:property-placeholder location="classpath:jdbc.properties" />
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.url}" p:username="${jdbc.username}" p:password="${jdbc.password}" />
         -->
	
	<!-- 实例化jdbcTemplate,同时注入数据源 
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
		p:dataSource-ref="dataSource" />
	-->
	<!-- 配置事务管理器 
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	-->
	<!-- 事务扫描开始(开启@Tranctional) 
	<tx:annotation-driven transaction-manager="txManager" />
    -->
</beans>